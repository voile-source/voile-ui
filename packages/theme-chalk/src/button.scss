@use 'mixins/mixins.scss' as *;
@use 'mixins/config.scss' as *;

$prefix: '--color-';

@mixin color($color) {
  --button-text-color: var(--color-white);
  --button-bg-color: var(#{$prefix + $color});
  --button-border-color: var(#{$prefix + $color});
  &:hover {
    @include color-state($color, 'hover');
  }
  &:active {
    @include color-state($color, 'active');
  }
}

@mixin color-state($color, $state) {
  --button-text-color: var(--color-white);
  --button-bg-color: var(#{$prefix + $color + '-' + $state});
  --button-border-color: var(#{$prefix + $color + '-' + $state});
}

@mixin color-link($color, $state) {
  --button-bg-color: transparent;
  --button-border-color: transparent;
  --button-text-color: var(#{$prefix + $color + '-' + $state});
}

@mixin default($color) {
  --button-text-color: var(#{$color});
  --button-bg-color: var(--color-white);
  --button-border-color: var(--color-fill-3);
  --button-border-radius: var(--border-radius-small);
  --button-font-size: var(--font-size-default);
  --button-height: 32px;
}

@mixin default-hover() {
  --button-text-color: var(--color-primary);
  --button-bg-color: var(--color-primary-light);
  --button-border-color: var(--color-primary-light-hover);
}

@mixin default-active($color) {
  $suffix: '-light';
  --button-text-color: var(#{$prefix + $color});
  --button-bg-color: var(#{$prefix + $color + $suffix});
  --button-border-color: var(#{$prefix + $color});
}

@mixin is-plain($color) {
  @include when(plain) {
    @include default-active($color);
    &:hover {
      @include color($color);
    }
    &:active {
      @include color-state($color, active);
    }

    @include is-disabled(#{$color + '-light'});
  }
}

@mixin is-disabled($color) {
  @include when(disabled) {
    @include color-state($color, 'disabled');
    &:hover,
    &:active {
      @include color-state($color, 'disabled');
    }
  }
}

@mixin is-link($color) {
  @include when(link) {
    --button-text-color: var(#{$prefix + $color});
    &:hover {
      @include color-link($color, 'light-hover');
    }
    &:active {
      @include color-link($color, 'active');
    }
    @include when(disabled) {
      --button-text-color: var(#{$prefix + $color + '-disabled'});
      --button-bg-color: transparent;
      --button-border-color: transparent;
    }
  }
}

@mixin is-text($color) {
  @include when(text) {
    --button-text-color: var(#{$prefix + $color});
    --button-bg-color: transparent;
    --button-border-color: transparent;
  }
}

@mixin setState($state) {
  @include color($state);
  @include is-plain($state);
  @include is-disabled($state);
  @include is-link($state);
  @include is-text($state);
}

@include b(button) {
  @include default(--color-text-0);
  display: inline-flex;
  justify-content: center;
  align-items: center;
  height: var(--button-height);
  line-height: 1;
  cursor: pointer;
  transition: 0.1s;
  font-size: var(--button-font-size);
  color: var(--button-text-color);
  border: var(--color-border);
  padding: 8px 15px;
  margin: 0 8px;
  user-select: none;
  background: var(--button-bg-color);
  border: 1px solid var(--button-border-color);
  border-radius: var(--button-border-radius);

  @include m(small) {
    padding: 5px 11px;
    --button-font-size: var(--font-size-small-extra);
    --button-height: 24px;
  }

  @include m(large) {
    padding: 12px 19px;
    --button-font-size: var(--font-size-large);
    --button-height: 40px;
  }

  &:hover {
    @include default-hover;
  }
  &:active {
    @include default-active(primary);
  }

  @include when(plain) {
    &:hover {
      @include default-active(primary);
    }
    &:active {
      @include default-active(primary);
    }
  }

  @include when(round) {
    --button-border-radius: var(--border-radius-full);
  }

  @include when(circle) {
    --button-border-radius: var(--border-radius-circle);
    padding: 8px;
  }

  @include when(disabled) {
    @include default(--color-fill-5);
    cursor: not-allowed;
    &:hover,
    &:active {
      @include default(--color-fill-5);
    }
  }

  @include when(link) {
    --button-bg-color: transparent;
    --button-border-color: transparent;
    --button-text-color: var(--color-text-0);
    &:hover {
      --button-text-color: var(--color-default-light);
    }
    &:active {
      --button-text-color: var(--color-text-0);
    }
    @include when(disabled) {
      --button-text-color: var(#{$prefix + 'default-disabled'});
      --button-bg-color: transparent;
      --button-border-color: transparent;
    }
  }

  @include when(text) {
    --button-bg-color: transparent;
    --button-border-color: transparent;
    --button-text-color: var(--color-text-0);
    &:hover {
      --button-bg-color: var(--color-default-hover);
      --button-border-color: var(--color-default-hover);
    }
    &:active {
      --button-bg-color: var(--color-default-active);
      --button-border-color: var(--color-default-active);
    }
    @include when(disabled) {
      --button-text-color: var(#{$prefix + 'default-disabled'});
      --button-bg-color: transparent;
      --button-border-color: transparent;
    }
  }

  @each $item in $states {
    @include e($item) {
      @include setState($item);
    }
  }
}
